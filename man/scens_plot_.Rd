% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scens_plot_boxplot.R, R/scens_plot_cloud.R,
%   R/scens_plot_probs.R, R/scens_plot_range.R, R/var_plot_trace_scatter.R,
%   R/vars_plot_heatmap.R, R/vars_plot_probs.R
\name{scens_plot_boxplot}
\alias{scens_plot_boxplot}
\alias{scens_plot_cloud}
\alias{scens_plot_probs}
\alias{scens_plot_range}
\alias{var_plot_trace_scatter}
\alias{vars_plot_heatmap}
\alias{vars_plot_probs}
\title{Plot scenario and variable comparison figures}
\usage{
scens_plot_boxplot(
  df,
  vars,
  years = NULL,
  scenarios = NULL,
  plot_colors = NULL,
  scen_labels = NULL,
  ...
)

scens_plot_cloud(
  df,
  vars,
  historical = NULL,
  years = NULL,
  scenarios = NULL,
  plot_colors = NULL,
  scen_labels = NULL,
  ...
)

scens_plot_probs(
  df,
  vars,
  years = NULL,
  scenarios = NULL,
  plot_colors = NULL,
  scen_labels = NULL,
  ...
)

scens_plot_range(
  df,
  vars,
  years = NULL,
  scenarios = NULL,
  plot_colors = NULL,
  scen_labels = NULL,
  ...
)

var_plot_trace_scatter(
  df,
  scenarios,
  years,
  vars,
  color_by = NULL,
  plot_colors = NULL,
  ...
)

vars_plot_heatmap(
  df,
  scenarios,
  years = NULL,
  vars = NULL,
  var_labels = NULL,
  ...
)

vars_plot_probs(
  df,
  scenarios,
  years = NULL,
  vars = NULL,
  plot_colors = NULL,
  var_labels = NULL,
  plot_type = "line",
  ...
)
}
\arguments{
\item{df}{Data frame. Must have "Year", "Variable", "ScenarioGroup", and
"Value" columns.}

\item{vars}{Character vector specifying the variable(s) to use (found in
\code{df$Variable}). If \code{NULL}, use all variables in \code{df}. Must be specified in
\verb{scens_plot_*()} family. For \code{vars_plot_heatmap()}, the order that \code{vars}
are provided will be used to order the heatmap from top to bottom.}

\item{years}{Numeric vector specifying the years to show. If \code{NULL}, use all
years in \code{df}.}

\item{scenarios}{Character vector specifying the scenarios to use (found in
\code{df$ScenarioGroup}). If \code{NULL}, use all scenarios in \code{df}. Must be
specified in \verb{vars_plot_*()} family.}

\item{plot_colors}{Named character vector to set custom plot colors. Names
should match scenarios found in \code{df$ScenarioGroup}.}

\item{scen_labels}{Named character vector to set custom legend labels for the
scenarios. Used to show legend labels that are different from values found
in \code{df$ScenarioGroup}.}

\item{...}{Parameters passed to other functions. See details.}

\item{historical}{Data frame of historical data to add to the figure. Must
have a "Year" column, and the same number of additional columns as the
length of \code{vars}. If there is only one variable, then the column names in
this data frame do not matter (except for Year). However, if there are
more than one variable, then the column names must match those in \code{vars}.}

\item{color_by}{For \code{var_plot_trace_scatter()}, the points can be colored
based on a specified column in the \code{df}. This should be specified as a
string, and should exist in \code{df}.}

\item{plot_type}{For \code{vars_plot_probs()}, should the plot use lines
(\code{'line'}), or stacked bars (\code{'stacked bar'}). Can also use \code{1} or \code{2},
respectively.}
}
\value{
\code{gg} object.
}
\description{
\code{scens_plot_boxplot()} is similar to \code{scens_plot_range()} and
\code{scens_plot_cloud()}, except it uses boxplots to show the range for each
year. The boxplot are based on \code{\link[CRSSIO:stat_boxplot_custom]{CRSSIO::stat_boxplot_custom()}}, so whiskers
extend to 5th and 95th percentiles, and outliers are shown for points beyond
those percentiles.

\code{scens_plot_cloud()} plots the range of results for multiple scenarios. The
range is shown as a shaded region (cloud) extending from the 10th to 90th
percentiles, along with a solid line for the median. Typically
this is done for only one variable, but multiple variables can be provided
and will be shown as separate facets.

Additionally, \code{scens_plot_cloud()} can use the "fill_label" option.

Plotting functions that are designed to largely compare across scenarios
are the \verb{scens_plot_*()} family, while those designed to compare across
variables are the \verb{vars_plot_*()} family. However, both families will facet
across the other dimention, e.g., \verb{scens_plot_*()} will facet by variable.

\code{scens_plot_probs()} plots probability plots, i.e., the chance of a variable
occurring. Different \code{scenarios} are shown as different colors, and if there
are different variables (\code{vars}) they are shown as different facets.

\code{scen_plot_range()} plots the range of results for multiple scenarios. The
range is shown as lines for 10th, 50th, and 90th percentiles. Typically
this is done for only one variable, but multiple variables can be provided
and will be shown as separate facets.

\code{var_plot_trace_scatter()} creates a trace number vs. value scatter plot for
a single year and variable. If multiple \code{scenarios} are specified the
scenarios are shown as different facets.

\code{vars_plot_heatmap()} creates a heatmap based on the percentage of traces
that fall into each bin, i.e., variable. The heatmap is years on the x axis
and variables on the y axis, with the color representing the percent of
traces in a given variable. Works with the \code{title}, \code{subtitle}, \code{caption},
\code{y_lab}, \code{color_label}, \code{legend_wrap}, \code{facet_scales}, \code{facet_nrow},
and \code{facet_ncol} plot options.

\code{vars_plot_probs()} plots the probabilities for multiple variables on a a
single plot. Different \code{vars} are shown as different colors, and if there are
multiple \code{scenarios} they are shown as different facets. The variables'
probabilities can be shown as lines (\code{plot_type = "line"}) or as stacked bars
(\code{plot_type = "stacked bar"}). For stacked bars, care should be taken by user
to ensure summing probabilities makes sense.
}
\details{
\code{...} is used to pass additional options to ggplot functions. The following
are used:
\itemize{
\item "title", "subtitle", and "caption" are passed to \code{\link[ggplot2:labs]{ggplot2::labs()}}.
"color_label" and "y_lab" are also passed using \code{color} and \code{y} parameters,
respectively.
\item "legend_wrap" is used to modify labels in legends etc. by calling
\code{\link[stringr:str_wrap]{stringr::str_wrap()}} on the appropriate variable, with
\code{width = legend_wrap}.
\item "facet_scales", "facet_nrow", and "facet_ncol" are all passed to
\code{\link[ggplot2:facet_wrap]{ggplot2::facet_wrap()}}.
}

\code{scens_plot_probs()} and \code{scens_plot_range()} will use the following
additional options: "y", "title", "color_label", "legend_wrap",
"facet_scales", "facet_nrow", and "facet_ncol".

The legend order can be modified by converting "ScenarioGroup" column to a
factor before calling \verb{scens_plot_*()}, with the levels specifying the
order the scenarios will show up in the legend.
}
\examples{
# quick simple plot using 1 variable and all years
scens_plot_boxplot(ex_pe, vars = "powell_dec_pe")

# fully customized for multiple variables, custom colors, and custom names
scens_plot_boxplot(
  ex_pe, 
  vars = c("powell_dec_pe", "mead_dec_pe"), 
  years = 2021:2036,
  title = "Mead and Powell", subtitle = "End-of-December Elevation",
  y_lab = "(feet)", caption = "Results from April 20xx",
  facet_scales = "free_y", 
  plot_colors = pal,
  scen_labels = tst_names,
  legend_wrap = 10
)

scens_plot_probs(ex_pe, "powell_wy_min_lt_3525", y_lab = "percent")

# quick simple plot of one variable
scens_plot_range(ex_pe, "mead_dec_pe"))

# now add ylabel 
scens_plot_range(ex_pe, "mead_dec_pe", y_lab = "feet")

# show two variables
scens_plot_range(
  ex_pe, 
  c("powell_dec_pe", "mead_dec_pe"), 
  facet_scales = "free_y"
)

# subset scenarios
scens_plot_range(ex_pe, "mead_dec_pe", scenarios = "April ST CT"))

# custom colors and scenario labels + add title and caption
pc <- c("April ST CT" = "red", "April ST 2007 UCRC" = "black")
sl <- c("April ST CT" = "s1", "April ST 2007 UCRC" = "s2")
scens_plot_range(ex_pe, 
  "powell_dec_pe", 
  plot_colors = pc, 
  scen_labels = sl,
  title = "PE", 
  caption = "this is a caption")
)

# change to two rows in stead of two columns for showing two variables
scens_plot_range(
  ex_pe, 
  c("powell_dec_pe", "mead_dec_pe"), 
  facet_scales = "free_y",
  facet_nrow = 2)
)

# scatter plot for Mead elevation in Dec. 2021
var_plot_trace_scatter(
  ex_pe, 
  vars = "mead_dec_pe", 
  years = 2021, 
  scenarios = "April ST CT"
)

# add in a new variable to be used to color the points:
zz <- mutate(ex_pe, color_cat = case_when(
  Value > 1095 ~ "No concern",
  Value > 1076 ~ "Some concern",
  Value > 1074 ~ "Moderate concern",
  TRUE ~ "concern")
)

cc <- c("No concern" = "grey20", "Some concern" = "blue", 
        "Moderate concern" = "steelblue", "concern" = "red")

# color by the new variable, and show two scenarios:
gg <- var_plot_trace_scatter(
  zz, 
  vars = "mead_dec_pe", 
  years = 2021, 
  scenarios = c("April ST CT", "April ST 2007 UCRC"), 
  color_by = "color_cat"
)


vv <- c("mead_min_lt_1000", "mead_min_lt_1020", "powell_wy_min_lt_3490", 
"powell_dec_lt_3525")

gg <- vars_plot_probs(ex_pe, "April ST CT", vars = vv, years = 2020:2026)

# or show both scenarios:
ss <- unique(ex_pe$ScenarioGroup)
gg <- vars_plot_heatmap(ex_pe, ss, vars = vv, years = 2020:2026)

vv <- c("mead_min_lt_1000", "mead_min_lt_1020", "powell_wy_min_lt_3490", 
"powell_dec_lt_3525")

gg <- vars_plot_probs(ex_pe, "April ST CT", vars = vv)

# it does not make sense to stack bars for these 4 variables, but you can:
gg <- vars_plot_probs(
  ex_pe, 
  "April ST CT", 
  vars = vv, 
  plot_type = "stacked bar"
)

}
